use std::collections::HashSet;

use lazy_static::lazy_static;

pub(crate) fn is_known_tag(tag: &str) -> bool {
    KNOWN_TAG_NAMES.contains(&tag)
}

pub(crate) fn is_builtin_component(tag: &str) -> bool {
    VUE_BUILTIN_COMPONENTS.contains(&tag)
}

#[test]
fn test_is_known_tag() {
    println!("{}", is_known_tag(("htm".to_string() + "l").as_str()));
}

const VUE_BUILTIN_COMPONENTS: [&'static str; 6] = [
    "Fragment",
    "Teleport",
    "Suspense",
    "KeepAlive",
    "Transition",
    "TransitionGroup",
];

lazy_static! {
    static ref KNOWN_TAG_NAMES: HashSet<&'static str> = HashSet::from([
        "html",
        "body",
        "base",
        "head",
        "link",
        "meta",
        "style",
        "title",
        "address",
        "article",
        "aside",
        "footer",
        "header",
        "h1",
        "h2",
        "h3",
        "h4",
        "h5",
        "h6",
        "nav",
        "section",
        "div",
        "dd",
        "dl",
        "dt",
        "figcaption",
        "figure",
        "picture",
        "hr",
        "img",
        "li",
        "main",
        "ol",
        "p",
        "pre",
        "ul",
        "a",
        "b",
        "abbr",
        "bdi",
        "bdo",
        "br",
        "cite",
        "code",
        "data",
        "dfn",
        "em",
        "i",
        "kbd",
        "mark",
        "q",
        "rp",
        "rt",
        "ruby",
        "s",
        "samp",
        "small",
        "span",
        "strong",
        "sub",
        "sup",
        "time",
        "u",
        "var",
        "wbr",
        "area",
        "audio",
        "map",
        "track",
        "video",
        "embed",
        "object",
        "param",
        "source",
        "canvas",
        "script",
        "noscript",
        "del",
        "ins",
        "caption",
        "col",
        "colgroup",
        "table",
        "thead",
        "tbody",
        "td",
        "th",
        "tr",
        "button",
        "datalist",
        "fieldset",
        "form",
        "input",
        "label",
        "legend",
        "meter",
        "optgroup",
        "option",
        "output",
        "progress",
        "select",
        "textarea",
        "details",
        "dialog",
        "menu",
        "summary",
        "template",
        "blockquote",
        "iframe",
        "tfoot",
        "svg",
        "animate",
        "animateMotion",
        "animateTransform",
        "circle",
        "clipPath",
        "color-profile",
        "defs",
        "desc",
        "discard",
        "ellipse",
        "feBlend",
        "feColorMatrix",
        "feComponentTransfer",
        "feComposite",
        "feConvolveMatrix",
        "feDiffuseLighting",
        "feDisplacementMap",
        "feDistanceLight",
        "feDropShadow",
        "feFlood",
        "feFuncA",
        "feFuncB",
        "feFuncG",
        "feFuncR",
        "feGaussianBlur",
        "feImage",
        "feMerge",
        "feMergeNode",
        "feMorphology",
        "feOffset",
        "fePointLight",
        "feSpecularLighting",
        "feSpotLight",
        "feTile",
        "feTurbulence",
        "filter",
        "foreignObject",
        "g",
        "hatch",
        "hatchpath",
        "image",
        "line",
        "linearGradient",
        "marker",
        "mask",
        "mesh",
        "meshgradient",
        "meshpatch",
        "meshrow",
        "metadata",
        "mpath",
        "path",
        "pattern",
        "polygon",
        "polyline",
        "radialGradient",
        "rect",
        "set",
        "solidcolor",
        "stop",
        "switch",
        "symbol",
        "text",
        "textPath",
        "tspan",
        "unknown",
        "use",
        "view"
    ]);
}

